// code to upload archives to Maven repositories
apply plugin: 'maven'


def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

afterEvaluate { project ->
    uploadArchives {
        println "preparing upload file ${VERSION_NAME}${VERSION_NAME_SUFFIX} for ${ARTIFACT}"

        ext.isReleaseVersion = !"${VERSION_NAME}${VERSION_NAME_SUFFIX}".contains("SNAPSHOT")

        repositories {
            mavenDeployer {
                pom.groupId = GROUP
                pom.artifactId = ARTIFACT
                pom.version = "${VERSION_NAME}${VERSION_NAME_SUFFIX}"
                repository(url: RELEASE_REPOSITORY_URL) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
                snapshotRepository(url: SNAPSHOT_REPOSITORY_URL) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
            }
        }
    }

    task androidJavadocs(type: Javadoc) {
        options.charSet = 'UTF-8'
        options.encoding = "UTF-8"
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    task androidJniSymbolsJar(type: Jar) {
        classifier = 'symbols'
        from file('obj/local/')
        include '**/*.so'
    }

    artifacts {
        // archives androidSourcesJar
        archives androidJavadocsJar
        archives androidJniSymbolsJar
    }
}